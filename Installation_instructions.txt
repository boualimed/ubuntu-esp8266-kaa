# Useful information

ESP8266 tutorial: https://kaaproject.github.io/kaa/docs/v0.10.0/Programming-guide/Using-Kaa-endpoint-SDKs/C/SDK-ESP8266/
C/C++ build configuration: http://docs.kaaproject.org/pages/viewpage.action?pageId=16417635
Data collection example: https://kaaproject.github.io/kaa/docs/v0.10.0//Programming-guide/Key-platform-features/Data-collection/
C doc: http://kaaproject.github.io/kaa/autogen-docs/client-c/v0.10.0/files.html

# Get the example from the git repository

URL: https://github.com/kaaproject/kaa/blob/v0.10.0/doc/Programming-guide/Using-Kaa-endpoint-SDKs/C/SDK-ESP8266/attach/esp8266-sample/

Git clone URL: https://github.com/kaaproject/kaa.git

# Share drive where kaa repository lies with docker

Goto Docker settings -> Shared drives and share the corresponding drive

# Run image

docker run -v "<Path to cloned git repository>\kaa\doc\Programming-guide\Using-Kaa-endpoint-SDKs\C\SDK-ESP8266\attach\esp8266-sample:/opt/app" -ti --privileged kaans/ubuntu-esp8266-kaa

-> Now your sample project is mounted to /opt/app

# Compile the project

Run the following commands from the directory /opt/app as user espespto :

rm -rf build
mkdir -p build
cd build
cmake .. \
        -DCMAKE_TOOLCHAIN_FILE=../kaa/toolchains/esp8266.cmake \
        -DKAA_PLATFORM=esp8266 \
        -DCMAKE_BUILD_TYPE=MinSizeRel \
        -DWITH_EXTENSION_CONFIGURATION=OFF \
        -DWITH_EXTENSION_EVENT=OFF \
        -DWITH_EXTENSION_NOTIFICATION=OFF \
        -DWITH_EXTENSION_LOGGING=OFF \
        -DWITH_EXTENSION_USER=OFF \
        -DWITH_EXTENSION_PROFILE=OFF \
        -DWITH_ENCRYPTION=OFF \
        -DKAA_MAX_LOG_LEVEL=3
make

# Flash the firmware

Goto the directory /opt/app and execute:

esptool.py elf2image build/kaa_demo
sudo esptool.py write_flash 0x00000 build/kaa_demo-0x00000.bin 0x40000 build/kaa_demo-0x40000.bin


